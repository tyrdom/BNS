//协议号32位 通常协议号不超过<<0,255,255,255>> 其他预留为快速操作协议
//0 服务器报错
message ErrorResp {
  repeated int32 reply = 1; //0：未知错误，1：Socket消息状态异常 2 账号异地登录
                            //3：战斗时长期没行动，4：战斗时一个tick发送消息频率太快，疑似开变速
}

//1 客户端请求创建账号 此时状态为unknown 收到后状态更新为create
message AccountCreateReq {
  required string accountId = 1;
  required string password = 2;
}
//2 服务端返回创建回复 此时状态为create
message AccountCreateResp {
  repeated int32 reply = 1;
  //0：其他异常 状态变为unknown  1：正常 状态变为unknown 2：账号已存在 状态变为unknown
}


//3 客户端请求登录 此时状态为unknown 收到后状态更新为check
message AccountLoginReq {
  required string accountId = 1;
  required string password = 2;
}
//4 服务端回复登录 此时状态为login
message AccountLoginResp {
  repeated int32 reply = 1;
// 0：其他异常 状态变为unknown 1：正常 状态变为access 2：账号不存在 状态变为unknown
// 3：密码错误 状态变为unknown 4: 顶号登录 状态变为access
}

//5 客户端请求查看账户信息 此时需要状态为 access 接到后状态更新为 check
message AccountCheckReq {

}

//6 服务端回复查看账户信息 此时状态为 check 发出后状态变为access
message AccountCheckResp {

    repeated string nickname = 1;
    repeated int32 gold = 2;
}

//7 客户端请求退出账户 此时状态为 access 发出后状态变为quit
message AccountQuitReq {

}

//8 服务端回复退出账户  此时状态为 quit 状态更新为 unknown 为正常退出账号，socket不会断开
message AccountQuitResp {

}

//10 服务器发送的心跳信息，保持socket连接不超时，
//在战斗进行中，为节省带宽，会停止发送
//socket连上但未登陆为access状态，不会发送心跳，挂机超过一定时间会被主动断开连接
message BeatResp {
    repeated int32 reply = 1; //从1到10000循环，
}

//11 请求加入 状态需要access 发出后状态为join
message AccountJoinReq {
    required int32 type = 1; // 0:指定进程加入模式  1：匹配快速加入：party模式，随加随退  2：比赛匹配加入：match模式
    required int32 roomPid = 2; //指定进程
}

//12 服务端回复加入房间  此时状态为 join 成功状态更新为{battle，RoomPID} 不成功更新为 access
message AccountJoinResp {
    repeated int32 reply = 1; //1成功，2人满 3超时
}





// 在battle状态时，发送1开头的32位数据包代表游戏控制指令 <<1,xxx,xxx,xxx>>

//